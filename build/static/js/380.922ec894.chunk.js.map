{"version":3,"file":"static/js/380.922ec894.chunk.js","mappings":"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","sources":["Pages/Contact/QuickContact.jsx","Components/Navbar/Navbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Contact.css'; // Assuming you're using SCSS for styles\r\n\r\nconst QuickContact = ({ close }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        message: \"\",\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [responseMessage, setResponseMessage] = useState(\"\");\r\n    const [showAlert, setShowAlert] = useState(false); // State to control alert visibility\r\n    const [alertType, setAlertType] = useState(''); // For success or error alert styles\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setResponseMessage(\"\");\r\n\r\n        try {\r\n            const API_URL = \"https://legacy.techlanditsolutions.com/api/contacts\";\r\n\r\n            const response = await axios.post(API_URL, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            console.log(\"Success:\", response.data);\r\n            setResponseMessage(\"Message sent successfully!\");\r\n            setAlertType('success'); // Set alert type to success\r\n            setFormData({ name: \"\", phone: \"\", email: \"\", message: \"\" }); // Reset form\r\n        } catch (error) {\r\n            console.error(\"Error submitting form:\", error);\r\n            setResponseMessage(\"Failed to submit form. Please try again.\");\r\n            setAlertType('error'); // Set alert type to error\r\n        } finally {\r\n            setLoading(false);\r\n            setShowAlert(true); // Show the alert after the submission\r\n            setTimeout(() => {\r\n                setShowAlert(false)\r\n                close()\r\n            }, 5000); // Hide alert after 5 seconds\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"unique-form-container-bg\">\r\n            <div className=\"unique-form-container\">\r\n                <div className='unique-form-container-header'>\r\n                    <h3>Get a Quote</h3>\r\n                    <button className=\"unique-form-close-button\" onClick={close}>\r\n                        <svg fill=\"none\" viewBox=\"0 0 15 15\" height=\"15\" width=\"15\">\r\n                            <path strokeLinecap=\"round\" strokeWidth=\"2\" stroke=\"white\" d=\"M1 14L14 1\"></path>\r\n                            <path strokeLinecap=\"round\" strokeWidth=\"2\" stroke=\"white\" d=\"M1 1L14 14\"></path>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Custom Alert */}\r\n                {showAlert && (\r\n                    <div className={`custom-alert ${alertType}`}>\r\n                        <p>{responseMessage}</p>\r\n                    </div>\r\n                )}\r\n\r\n                <form className=\"unique-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"unique-form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" id=\"name\" name=\"name\" required value={formData.name} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"unique-form-group\">\r\n                        <label htmlFor=\"phone\">Phone Number</label>\r\n                        <input type=\"text\" id=\"phone\" name=\"phone\" required value={formData.phone} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"unique-form-group\">\r\n                        <label htmlFor=\"email\">E-mail</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" required value={formData.email} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"unique-form-group\">\r\n                        <label htmlFor=\"message\">Message</label>\r\n                        <textarea name=\"message\" id=\"message\" rows=\"5\" required value={formData.message} onChange={handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"unique-form-submit-container\">\r\n                        <button type=\"submit\" className=\"unique-form-submit-button\" disabled={loading}>\r\n                            {loading ? \"Submitting...\" : \"Submit\"}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuickContact;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport logo from \"../Assets/logo/image.png\";\r\nimport \"./Navbar.css\";\r\nimport QuickContact from \"../../Pages/Contact/QuickContact\";\r\n\r\nconst Navbar = () => {\r\n  const [showgetQuote, setShowgetQuote] = useState(false);\r\n  const [scrolltoTop, setscrolltoTop] = useState(false);\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const location = useLocation(); // Get the current path\r\n\r\n  useEffect(() => {\r\n    if (showgetQuote) {\r\n      document.documentElement.style.overflow = \"hidden\";\r\n    } else {\r\n      document.documentElement.style.overflow = \"\";\r\n    }\r\n\r\n    return () => (document.documentElement.style.overflow = \"\");\r\n  }, [showgetQuote]);\r\n\r\n  useEffect(() => {\r\n    setIsMenuOpen(false);\r\n  }, [scrolltoTop]);\r\n\r\n  // Function to check if link is active\r\n  const getActiveClass = (path) => (location.pathname === path ? \"nav-link active\" : \"nav-link\");\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: \"76px\" }}></div>\r\n      <header className=\"header\">\r\n        <div className=\"navbar-area\">\r\n          <nav className=\"navbarcontainer\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n              <img src={logo} alt=\"Logo\" />\r\n            </a>\r\n\r\n            <div className={`hamburger-icon ${isMenuOpen ? \"open\" : \"\"}`} onClick={() => setIsMenuOpen((prev) => !prev)}>\r\n              <span className=\"line\"></span>\r\n              <span className=\"line\"></span>\r\n              <span className=\"line\"></span>\r\n            </div>\r\n\r\n            <ul id=\"nav\" className={`navbar-nav ms-auto ${isMenuOpen ? \"open\" : \"\"}`}>\r\n              {[\r\n                { path: \"/\", label: \"Home\" },\r\n                { path: \"/about\", label: \"About Us\" },\r\n                { path: \"/services\", label: \"Services\" },\r\n                { path: \"/portfolio\", label: \"Portfolio\" },\r\n                { path: \"/team\", label: \"Our Team\" },\r\n                { path: \"/contact\", label: \"Contact Us\" },\r\n              ].map((item) => (\r\n                <li className=\"nav-item\" key={item.path} onClick={() => setscrolltoTop((prev) => !prev)}>\r\n                  <a href={item.path} className={getActiveClass(item.path)}>\r\n                    {item.label}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n\r\n              <li>\r\n                <button\r\n                  className=\"custom-button\"\r\n                  style={{ \"--clr\": \"#7808d0\" }}\r\n                  onClick={() => setShowgetQuote(true)}\r\n                >\r\n                  <span className=\"custom-button__icon-wrapper\">\r\n                    <svg viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"custom-button__icon-svg\" width=\"10\">\r\n                      <path\r\n                        d=\"M13.376 11.552l-.264-10.44-10.44-.24.024 2.28 6.96-.048L.2 12.56l1.488 1.488 9.432-9.432-.048 6.912 2.304.024z\"\r\n                        fill=\"currentColor\"\r\n                      ></path>\r\n                    </svg>\r\n                    <svg\r\n                      viewBox=\"0 0 14 15\"\r\n                      fill=\"none\"\r\n                      width=\"10\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"custom-button__icon-svg custom-button__icon-svg--copy\"\r\n                    >\r\n                      <path\r\n                        d=\"M13.376 11.552l-.264-10.44-10.44-.24.024 2.28 6.96-.048L.2 12.56l1.488 1.488 9.432-9.432-.048 6.912 2.304.024z\"\r\n                        fill=\"currentColor\"\r\n                      ></path>\r\n                    </svg>\r\n                  </span>\r\n                  Get a Quote\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <div id=\"progressBar\" className=\"progress-bar\"></div>\r\n        </div>\r\n      </header>\r\n\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 100\">\r\n        <defs>\r\n          <linearGradient id=\"grad3\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n            <stop offset=\"0%\" style={{ stopColor: \"#c6c2f5\", stopOpacity: 1 }} />\r\n            <stop offset=\"100%\" style={{ stopColor: \"#b554ff\", stopOpacity: 1 }} />\r\n            <stop offset=\"50%\" style={{ stopColor: \"#f9c4f6\", stopOpacity: 1 }} />\r\n          </linearGradient>\r\n        </defs>\r\n        <path d=\"M0 0v99.7C62 69 122.4 48.7 205 66c83.8 17.6 160.5 20.4 240-12 54-22 110-26 173-10a392.2 392.2 0 0 0 222-5c55-17 110.3-36.9 160-27.2V0H0Z\" opacity=\".5\" fill=\"url(#grad3)\"></path>\r\n        <path d=\"M0 0v74.7C62 44 122.4 28.7 205 46c83.8 17.6 160.5 25.4 240-7 54-22 110-21 173-5 76.5 19.4 146.5 23.3 222 0 55-17 110.3-31.9 160-22.2V0H0Z\" fill=\"url(#grad3)\"></path>\r\n      </svg>\r\n\r\n      {showgetQuote && <QuickContact close={() => setShowgetQuote(false)} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":["_ref","close","formData","setFormData","useState","name","phone","email","message","loading","setLoading","responseMessage","setResponseMessage","showAlert","setShowAlert","alertType","setAlertType","handleChange","e","target","value","_jsx","className","children","_jsxs","onClick","fill","viewBox","height","width","strokeLinecap","strokeWidth","stroke","d","onSubmit","async","preventDefault","API_URL","response","axios","post","headers","console","log","data","error","setTimeout","htmlFor","type","id","required","onChange","rows","disabled","Navbar","showgetQuote","setShowgetQuote","scrolltoTop","setscrolltoTop","isMenuOpen","setIsMenuOpen","location","useLocation","useEffect","document","documentElement","style","overflow","_Fragment","href","src","logo","alt","prev","path","label","map","item","pathname","xmlns","x1","y1","x2","y2","offset","stopColor","stopOpacity","opacity","QuickContact"],"sourceRoot":""}